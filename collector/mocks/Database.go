// Code generated by mockery v2.42.1. DO NOT EDIT.

package collector_mocks

import mock "github.com/stretchr/testify/mock"

// Database is an autogenerated mock type for the Database type
type Database struct {
	mock.Mock
}

// AddTTL provides a mock function with given fields: collection, field, seconds
func (_m *Database) AddTTL(collection string, field string, seconds int32) error {
	ret := _m.Called(collection, field, seconds)

	if len(ret) == 0 {
		panic("no return value specified for AddTTL")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string, string, int32) error); ok {
		r0 = rf(collection, field, seconds)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// InsertMany provides a mock function with given fields: collection, documents
func (_m *Database) InsertMany(collection string, documents []interface{}) {
	_m.Called(collection, documents)
}

// NewDatabase creates a new instance of Database. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewDatabase(t interface {
	mock.TestingT
	Cleanup(func())
}) *Database {
	mock := &Database{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
